plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.1"
    id "org.sonarqube" version "5.1.0.4882"
}
shadowJar {
    relocate("dev.triumphteam.gui", "org.tan.TownsAndNations.gui")
    archiveClassifier.set('')
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

group = 'org.tan'
version = '0.11.2'

repositories {
    mavenCentral()
    maven {
        name = "spigot-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'minecraft-repo'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        url 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven { url 'https://jitpack.io' } //Vault
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT'
    compileOnly 'com.mojang:authlib:4.0.43'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'me.clip:placeholderapi:2.11.5'
    implementation 'dev.triumphteam:triumph-gui:+'
    implementation 'net.objecthunter:exp4j:0.4.8'
}

def targetJavaVersion = 17
java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

sonar {
    properties {
        property "sonar.projectKey", "Leralix_Towns-and-Nations_af9c411a-5737-4f09-82a0-67dffb464482"
        property "sonar.projectName", "Towns-and-Nations"
    }
}